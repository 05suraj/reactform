{"version":3,"sources":["components/Forms.jsx","components/Navbar.jsx","App.js","serviceWorker.js","index.js","components/image/img.png"],"names":["Forms","useForm","mode","register","handleSubmit","errors","className","src","img","alt","onSubmit","data","console","log","fname","name","type","placeholder","ref","required","minLength","value","message","lname","id","age","htmlFor","phone","pattern","email","rows","discription","pass1","pass2","Navbar","href","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.cb831c50.chunk.js","sourcesContent":["import React from 'react';\r\nimport img from './image/img.png'\r\nimport { useForm } from 'react-hook-form';\r\n\r\n\r\n\r\nconst Forms = () => {\r\n\r\n    const { register, handleSubmit, errors } = useForm({ mode: 'onBlur' });\r\n    const onSubmit = (data) => {\r\n        // e.preventDefault();\r\n        console.log(data.fname)\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid \">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\"><img className=\"img\" src={img} alt=\"\" /></div>\r\n\r\n                    <div className=\"col-md-8 \">\r\n\r\n                        <div className=\"mt-5 ml-4 mr-4\">\r\n                            <h3 className=\"mb-4 heading\">create an Account</h3>\r\n                            <form onSubmit={handleSubmit(onSubmit)}>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"col-md-5 \">\r\n\r\n                                        <div className=\"form_control \">\r\n                                            <label>Frist Name</label>\r\n                                            <input name=\"fname\" type=\"text\" placeholder=\"Enter Frist Name\"\r\n                                                ref={register({\r\n                                                    required: 'name must required',\r\n                                                    minLength: { value: 2, message: 'must be 6 char' }\r\n                                                })} />\r\n\r\n                                            {errors.fname && <small>{errors.fname.message}</small>}\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    <div className=\"col-md-5 \">\r\n\r\n                                        <div className=\"form_control \">\r\n                                            <label >Last Name</label>\r\n                                            <input name=\"lname\" type=\"text\" placeholder=\"Enter Frist Name\"\r\n                                                ref={register({\r\n                                                    required: 'name must required',\r\n                                                    minLength: { value: 2, message: 'must be 6 char' }\r\n                                                })} />\r\n\r\n                                            {errors.lname && <small>{errors.lname.message}</small>}\r\n\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-2 \">\r\n                                        <div className=\"form_control \">\r\n                                            <label >Age</label>\r\n                                            <input name=\"age\" type=\"text\" placeholder=\"Enter Age\" id=\"age\"\r\n                                                ref={register({\r\n                                                    required: true,\r\n\r\n                                                })} />\r\n\r\n                                            {errors.age && <small>age is required</small>}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"col-md-6 \">\r\n                                        <div className=\"form_control \">\r\n                                            <label htmlFor=\"phonenum\">Phone Number</label>\r\n                                            <input name=\"phone\" type=\"number\" placeholder=\"Enter You'r number\" id=\"pnumber\" ref={register({\r\n                                                required: 'phone must required',\r\n                                                minLength: { value: 10, message: 'must be 10 char' }\r\n                                            })} />\r\n\r\n                                            {errors.phone && <small>{errors.phone.message}</small>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 \">\r\n                                        <div className=\"form_control \">\r\n                                            <label htmlFor=\"phonenum\">Email</label>\r\n                                            <input name=\"email\" type=\"email\" placeholder=\"Enter Last Name\" id=\"lname\" ref={register({\r\n                                                required: \"Email is required\",\r\n                                                pattern: {\r\n                                                    value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/,\r\n                                                    message: 'invalid email adress'\r\n                                                },\r\n\r\n                                            })} />\r\n                                            {errors.email && <small>{errors.email.message}</small>}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"form-group  \">\r\n\r\n                                    <div className=\"form_control \">\r\n                                        <label htmlFor=\"exampleFormControlTextarea1\">Discription</label>\r\n                                        <textarea name=\"discription\" className=\"form-control\" id=\"exampleFormControlTextarea1\" placeholder=\"\"\r\n                                            rows=\"3\" ref={register({\r\n                                                required: true,\r\n\r\n                                            })} />\r\n\r\n                                        {errors.discription && <small>this is required</small>}\r\n                                        <span className=\"d-flex justify-content-end\">max: 150 characters</span>\r\n                                    </div>\r\n\r\n\r\n                                </div>\r\n                                <div className=\"form-row\">\r\n                                    <div className=\"col-md-6 \">\r\n                                        <div className=\"form_control \">\r\n                                            <label htmlFor=\"phonenum\">Password</label>\r\n                                            <input name=\"pass1\" type=\"text\" placeholder=\"Enter Password\"\r\n                                                ref={register({\r\n                                                    required: 'password is required',\r\n                                                    minLength: { value: 5, message: 'must be 5 char' }\r\n                                                })} />\r\n                                            <i className=\"fa fa-eye\"></i>\r\n                                            {errors.pass1 && <small>{errors.pass1.message}</small>}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-md-6 \">\r\n                                        <div className=\"form_control \">\r\n                                            <label htmlFor=\"phonenum\">Password Confirm</label>\r\n                                            <input name=\"pass2\" type=\"text\" placeholder=\"Enter Confirm Password\" ref={register({\r\n                                                required: 'password is required',\r\n                                                minLength: { value: 5, message: 'must be 5 char' }\r\n                                            })} />\r\n                                            <i className=\"fa fa-eye\"></i>\r\n                                            {errors.pass2 && <small>{errors.pass2.message}</small>}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"text-center\">\r\n                                    <button className=\" outlinebutton m-3\" >reset</button>\r\n                                    <button className=\" btn-primary\" type=\"submit\">Submit</button>\r\n\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Forms;","import React from 'react';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <>\r\n\r\n            <div className=\"container-fluid\">\r\n\r\n\r\n                <nav className=\"d-flex justify-content-between\">\r\n                    <div className=\"logo\"><h1>logo</h1></div>\r\n                    <div>\r\n                        <ul>\r\n                            <li><a href=\"ddj\">Home</a></li>\r\n                            <li><a href=\"jjj\">About us</a></li>\r\n                            <li><a href=\"hhh\">Contact us</a></li>\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n\r\n            </div>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\n\nimport './App.css';\nimport Forms from './components/Forms';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js';\nimport '../node_modules/jquery/dist/jquery.js';\nimport '../node_modules/popper.js/dist/popper.js';\nimport Navbar from './components/Navbar';\n\n\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n      <Forms />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/img.ae47b47b.png\";"],"sourceRoot":""}